set tabstop=4
set shiftwidth=4
set softtabstop=4
set autoindent
set mouse=a
set number
set relativenumber
set expandtab

" Plugin

set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" Add plugins here

Plugin 'preservim/nerdtree'
Plugin 'tibabit/vim-templates' " Templates
Plugin 'romkatv/powerlevel10k'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" Autocomplete parenthesis
Plugin 'jiangmiao/auto-pairs'

" {
" Track the engine.
Plugin 'SirVer/ultisnips'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-w>"
let g:UltiSnipsJumpBackwardTrigger="<c-q>"
" Create a new snips
" https://yufanlu.net/2016/10/30/ultisnips/

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
" }

call vundle#end()
filetype plugin indent on

map <C-t> :NERDTree<CR>
" End Plugings

" autocmd BufNewFile *.cpp -r ~/templates/template.cpp

map <F5> :<C-U>!g++ -std=c++17 -Wall -DLOCAL=1 -o %:r.o  %:r.cpp && ./%:r.o<CR>

map <F6> :<C-U>!g++ -std=c++17 -DLOCAL=1 -o ~/running.cpp && ~/running.o '%:p' 'A1' 'A2'<CR>

" Setting - Vim Template

let g:tmpl_search_paths = ['~/templates']

let g:tmpl_author_email = 'es.luismiguelbaez@gmail.com'

let g:tmpl_author_name = 'Luis Miguel Baez'


let g:root_path_vim_algorithms_template = '~/algorithms-template-cp/'

" Debugging
execute 'cnoreabbre to_string_main r ' . root_path_vim_algorithms_template . 'debugging/to_string_main.cpp'
execute 'cnoreabbre to_string_other r ' . root_path_vim_algorithms_template . 'debugging/to_string_other.cpp'

" Macros
execute 'cnoreabbrev macros_main r ' . root_path_vim_algorithms_template . 'macros/macros_main.cpp'
execute 'cnoreabbrev macros_pairs r ' . root_path_vim_algorithms_template . 'macros/macros_pairs.cpp'
execute 'cnoreabbrev macros_numerical r ' . root_path_vim_algorithms_template . 'macros/macros_numerical.cpp'
execute 'cnoreabbrev macros_precise r ' . root_path_vim_algorithms_template . 'macros/macros_precise.cpp'

" Geometry
" 2D
execute 'cnoreabbrev 2d_geometry_main r ' . root_path_vim_algorithms_template . 'geometry/2d_geometry_main.cpp'

nmap <C-k> :TTA<cr>
